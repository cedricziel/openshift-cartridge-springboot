#!/bin/bash

# Source utility functions.
source $OPENSHIFT_CARTRIDGE_SDK_BASH

STOPTIMEOUT=10
FMT="%a %b %d %Y %H:%M:%S GMT%z (%Z)"

function status() {
  if is_cartridge_running; then
    client_result "Application is running"
  else
    client_result "Application is not running"
  fi
}  #  End of function  status.

function start() {
    echo "Starting Spring Boot cartridge"
    export JAVA_HOME=$OPENSHIFT_DATA_DIR/jdk1.8.0_20
    export PATH=$JAVA_HOME/bin:$PATH

    cd $OPENSHIFT_REPO_DIR
    nohup java \
        -Xms384m -Xmx412m \
        -jar build/libs/*.jar \
        --server.port=${OPENSHIFT_DIY_PORT} \
        --server.address=${OPENSHIFT_DIY_IP} \
        --spring.profiles.active=openshift &
}

function stop() {
    echo "Stopping Spring Boot cartridge"
    PID=$(ps -ef | grep java.*\.jar | grep -v grep | awk '{ print $2 }')

    if [ -z "$PID" ]
    then
        client_result "Application is already stopped"
    else
        kill $PID
    fi
}

function restart() {
    is_cartridge_running && stop
    start
}

function pre-build() {
    echo "pre-build"
}

function build() {
    echo "build"
}

function post-deploy() {
    echo "post-deploy"
}

function pre-repo-archive() {
    echo "pre-repo-archive"
}

# Clean up any log files
function tidy() {
  client_message "Emptying nodejs logs in dir: $OPENSHIFT_LOG_DIR"
  shopt -s dotglob
}

function is_cartridge_running() {
    PID=$(ps -ef | grep java.*\.jar | grep -v grep | awk '{ print $2 }')

    if [ -z "$PID" ]
    then
        return 1
    else
        return 0
    fi
}

#
#  main():
#

# Ensure arguments.
if ! [ $# -eq 1 ]; then
    echo "Usage: $0 [start|restart|graceful|graceful-stop|stop|status]"
    exit 1
fi

# Handle commands.
case "$1" in
    start)               start       ;;
    restart|graceful)    restart     ;;
    graceful-stop|stop)  stop        ;;
    status)              status      ;;
    pre-build)           pre-build   ;;
    build)               build       ;;
    post-deploy)         post-deploy ;;
    tidy)                tidy        ;;
    pre-repo-archive)    pre-repo-archive ;;
    *) exit 0;
esac
